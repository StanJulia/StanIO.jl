method = sample (Default)
method = sample (Default)
method = sample (Default)
  sample
    num_samples = 1000 (Default)
  sample
  sample
    num_samples = 1000 (Default)
method = sample (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
  sample
    thin = 1 (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    thin = 1 (Default)
    adapt
    adapt
    save_warmup = 0 (Default)
    thin = 1 (Default)
      engaged = 1 (Default)
      gamma = 0.050000 (Default)
      delta = 0.800000 (Default)
    save_warmup = 0 (Default)
      kappa = 0.750000 (Default)
      engaged = 1 (Default)
      t0 = 10.000000 (Default)
    thin = 1 (Default)
      init_buffer = 75 (Default)
      gamma = 0.050000 (Default)
      term_buffer = 50 (Default)
    adapt
    adapt
      engaged = 1 (Default)
      window = 25 (Default)
      engaged = 1 (Default)
      gamma = 0.050000 (Default)
      gamma = 0.050000 (Default)
      delta = 0.800000 (Default)
      delta = 0.800000 (Default)
      save_metric = 0 (Default)
      kappa = 0.750000 (Default)
      delta = 0.800000 (Default)
      kappa = 0.750000 (Default)
      kappa = 0.750000 (Default)
      t0 = 10.000000 (Default)
      t0 = 10.000000 (Default)
      init_buffer = 75 (Default)
    algorithm = hmc (Default)
      term_buffer = 50 (Default)
      init_buffer = 75 (Default)
      hmc
      term_buffer = 50 (Default)
      t0 = 10.000000 (Default)
        engine = nuts (Default)
      window = 25 (Default)
          nuts
      save_metric = 0 (Default)
      window = 25 (Default)
      init_buffer = 75 (Default)
            max_depth = 10 (Default)
      term_buffer = 50 (Default)
      save_metric = 0 (Default)
    algorithm = hmc (Default)
    algorithm = hmc (Default)
        metric = diag_e (Default)
      hmc
      window = 25 (Default)
      hmc
        engine = nuts (Default)
      save_metric = 0 (Default)
          nuts
    algorithm = hmc (Default)
      hmc
        metric_file =  (Default)
            max_depth = 10 (Default)
        metric = diag_e (Default)
        engine = nuts (Default)
        metric_file =  (Default)
        stepsize = 1.000000 (Default)
          nuts
            max_depth = 10 (Default)
        stepsize = 1.000000 (Default)
        stepsize_jitter = 0.000000 (Default)
        stepsize_jitter = 0.000000 (Default)
        engine = nuts (Default)
    num_chains = 1 (Default)
id = 4
          nuts
            max_depth = 10 (Default)
data
        metric = diag_e (Default)
        metric = diag_e (Default)
        metric_file =  (Default)
        stepsize = 1.000000 (Default)
  file =  (Default)
    num_chains = 1 (Default)
init = 2 (Default)
random
id = 2
  seed = 4184457197 (Default)
        stepsize_jitter = 0.000000 (Default)
output
        metric_file =  (Default)
data
  file = /Users/rob/.julia/dev/StanIO/test/generate_edge_data/../../data/one_row/one_row_chain_4.csv
  file =  (Default)
        stepsize = 1.000000 (Default)
    num_chains = 1 (Default)
  diagnostic_file =  (Default)
        stepsize_jitter = 0.000000 (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
    num_chains = 1 (Default)
id = 1 (Default)
data
  file =  (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)

id = 3
init = 2 (Default)
init = 2 (Default)
random
data
random
  file =  (Default)
  seed = 4184457197 (Default)
init = 2 (Default)
random
output
  file = /Users/rob/.julia/dev/StanIO/test/generate_edge_data/../../data/one_row/one_row_chain_1.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  seed = 4184457197 (Default)
  sig_figs = 6
output
  profile_file = profile.csv (Default)
  seed = 4184457197 (Default)
  save_cmdstan_config = 0 (Default)
output
num_threads = 1 (Default)

  file = /Users/rob/.julia/dev/StanIO/test/generate_edge_data/../../data/one_row/one_row_chain_3.csv
  file = /Users/rob/.julia/dev/StanIO/test/generate_edge_data/../../data/one_row/one_row_chain_2.csv
  diagnostic_file =  (Default)
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)

  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)


Gradient evaluation took 2e-06 seconds


1000 transitions using 10 leapfrog steps per transition would take 0.02 seconds.
Adjust your expectations accordingly!


Gradient evaluation took 1e-06 seconds
Gradient evaluation took 1e-06 seconds

Gradient evaluation took 1e-06 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.01 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.01 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!
1000 transitions using 10 leapfrog steps per transition would take 0.01 seconds.
Adjust your expectations accordingly!






Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.003 seconds (Warm-up)
               0.012 seconds (Sampling)
               0.015 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.003 seconds (Warm-up)
               0.012 seconds (Sampling)
               0.015 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.003 seconds (Warm-up)
               0.012 seconds (Sampling)
               0.015 seconds (Total)


 Elapsed Time: 0.003 seconds (Warm-up)
               0.013 seconds (Sampling)
               0.016 seconds (Total)


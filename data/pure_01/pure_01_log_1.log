method = sample (Default)
method = sample (Default)
method = sample (Default)
  sample
method = sample (Default)
  sample
  sample
    num_samples = 1000 (Default)
    num_samples = 1000 (Default)
  sample
    num_warmup = 1000 (Default)
    num_samples = 1000 (Default)
    num_warmup = 1000 (Default)
    num_samples = 1000 (Default)
    save_warmup = 0 (Default)
    num_warmup = 1000 (Default)
    save_warmup = 0 (Default)
    num_warmup = 1000 (Default)
    thin = 1 (Default)
    save_warmup = 0 (Default)
    adapt
    thin = 1 (Default)
    thin = 1 (Default)
    adapt
      engaged = 1 (Default)
      engaged = 1 (Default)
    save_warmup = 0 (Default)
    adapt
      gamma = 0.050000 (Default)
      gamma = 0.050000 (Default)
    thin = 1 (Default)
      engaged = 1 (Default)
      delta = 0.800000 (Default)
    adapt
      delta = 0.800000 (Default)
      engaged = 1 (Default)
      gamma = 0.050000 (Default)
      kappa = 0.750000 (Default)
      kappa = 0.750000 (Default)
      gamma = 0.050000 (Default)
      t0 = 10.000000 (Default)
      t0 = 10.000000 (Default)
      delta = 0.800000 (Default)
      init_buffer = 75 (Default)
      init_buffer = 75 (Default)
      delta = 0.800000 (Default)
      term_buffer = 50 (Default)
      term_buffer = 50 (Default)
      kappa = 0.750000 (Default)
      window = 25 (Default)
      kappa = 0.750000 (Default)
      save_metric = 0 (Default)
      window = 25 (Default)
    algorithm = hmc (Default)
      t0 = 10.000000 (Default)
      hmc
      t0 = 10.000000 (Default)
      init_buffer = 75 (Default)
        engine = nuts (Default)
      init_buffer = 75 (Default)
          nuts
      term_buffer = 50 (Default)
      term_buffer = 50 (Default)
      window = 25 (Default)
            max_depth = 10 (Default)
      save_metric = 0 (Default)
    algorithm = hmc (Default)
      hmc
      window = 25 (Default)
        engine = nuts (Default)
          nuts
        metric = diag_e (Default)
      save_metric = 0 (Default)
        metric_file =  (Default)
            max_depth = 10 (Default)
    algorithm = hmc (Default)
      hmc
        stepsize = 1.000000 (Default)
        engine = nuts (Default)
        metric = diag_e (Default)
      save_metric = 0 (Default)
          nuts
        metric_file =  (Default)
    algorithm = hmc (Default)
            max_depth = 10 (Default)
        stepsize_jitter = 0.000000 (Default)
        stepsize = 1.000000 (Default)
        metric = diag_e (Default)
      hmc
    num_chains = 1 (Default)
        metric_file =  (Default)
        engine = nuts (Default)
id = 2
        stepsize_jitter = 0.000000 (Default)
          nuts
    num_chains = 1 (Default)
id = 3
            max_depth = 10 (Default)
        stepsize = 1.000000 (Default)
        metric = diag_e (Default)
data
data
  file =  (Default)
init = 2 (Default)
random
        metric_file =  (Default)
  seed = 1876201642 (Default)
  file =  (Default)
output
  file = /Users/rob/.julia/dev/StanIO/data/pure_01/pure_01_chain_3.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
        stepsize_jitter = 0.000000 (Default)
        stepsize = 1.000000 (Default)
    num_chains = 1 (Default)
id = 1 (Default)
data
  file =  (Default)
  save_cmdstan_config = 0 (Default)
init = 2 (Default)
random
        stepsize_jitter = 0.000000 (Default)
num_threads = 1 (Default)

  seed = 1876201642 (Default)
init = 2 (Default)
random
output
    num_chains = 1 (Default)
  seed = 1876201642 (Default)
  file = /Users/rob/.julia/dev/StanIO/data/pure_01/pure_01_chain_1.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)

id = 4
output
data
  file =  (Default)
init = 2 (Default)
random
  seed = 1876201643 (Default)
output
  file = /Users/rob/.julia/dev/StanIO/data/pure_01/pure_01_chain_2.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)

  file = /Users/rob/.julia/dev/StanIO/data/pure_01/pure_01_chain_4.csv
  diagnostic_file =  (Default)
  refresh = 100 (Default)
  sig_figs = 6
  profile_file = profile.csv (Default)
  save_cmdstan_config = 0 (Default)
num_threads = 1 (Default)





Gradient evaluation took 9.1e-05 seconds
Gradient evaluation took 9.5e-05 seconds
Gradient evaluation took 9.5e-05 seconds
Gradient evaluation took 9.5e-05 seconds
1000 transitions using 10 leapfrog steps per transition would take 0.91 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.95 seconds.
1000 transitions using 10 leapfrog steps per transition would take 0.95 seconds.
Adjust your expectations accordingly!
Adjust your expectations accordingly!




Adjust your expectations accordingly!


1000 transitions using 10 leapfrog steps per transition would take 0.95 seconds.
Adjust your expectations accordingly!


Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:    1 / 2000 [  0%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  100 / 2000 [  5%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  200 / 2000 [ 10%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  300 / 2000 [ 15%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  400 / 2000 [ 20%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  500 / 2000 [ 25%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  600 / 2000 [ 30%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  700 / 2000 [ 35%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  800 / 2000 [ 40%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration:  900 / 2000 [ 45%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1000 / 2000 [ 50%]  (Warmup)
Iteration: 1001 / 2000 [ 50%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1100 / 2000 [ 55%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1200 / 2000 [ 60%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1300 / 2000 [ 65%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1400 / 2000 [ 70%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1500 / 2000 [ 75%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1600 / 2000 [ 80%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1700 / 2000 [ 85%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1800 / 2000 [ 90%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 1900 / 2000 [ 95%]  (Sampling)
Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.013 seconds (Warm-up)
               0.025 seconds (Sampling)
               0.038 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.013 seconds (Warm-up)
               0.025 seconds (Sampling)
               0.038 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.013 seconds (Warm-up)
               0.025 seconds (Sampling)
               0.038 seconds (Total)

Iteration: 2000 / 2000 [100%]  (Sampling)

 Elapsed Time: 0.014 seconds (Warm-up)
               0.025 seconds (Sampling)
               0.039 seconds (Total)

